


/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

This is the code for creating the pre combine measurables data tables.  It's really only height
and weight AND 40 time because that is all you have at that point.

v2 changes to take weight that goes along with the best 40 time.
v3 adds in slot WR and CB and salary for injured players
v4 adds in the step to remove players not yet drafted from the first 4 seasons pro grades table
v5 changes it to join weight and 40 in its own step before putting the height in

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Create the master measurables table.

Only use school provided, borrowed, or scout estimated values from August through January. This is a 
preliminary / first step model for running when all you have is estimated values, so the values used
to build the models in the past need to be of the same type.

BUT, when doing similar players analysis, you want to use the best measurable data you have for previous
classes, even if it is from later in the process.  That's the reason for the two different commented
WHERE clause parts. Depending on which analysis youre doing, you can switch between them.

You use row_number() instead of rank() for measurable order becuase there are a couple players
who have duplicate measurables (as of 02/01/2019 it's only a handful of players, so you might go back eventually).

OUTPUT TABLES:
#temp_measurables

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

DECLARE @iSeason INT
SELECT @iSeason = (SELECT MAX(season) FROM Analytics.dbo.map_nfl_league_year_dates WHERE GETDATE() >= regular_season_start)

-- Check if #temp_measurables exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_measurables') IS NOT NULL
	DROP TABLE #temp_measurables

	SELECT wo.id AS workout_id
		,wo.[description] AS workout_description
		,wo.player_id AS bane_player_id
		,CASE WHEN draft_year <= @iSeason THEN draft_year
			WHEN draft_year IN (@iSeason + 1,@iSeason + 2) THEN @iSeason + 1
			ELSE NULL
		END AS draft_year
		,CASE WHEN mt.code = 'Hgt' THEN 'height' 
			WHEN mt.code = 'Wgt' THEN 'weight'
			WHEN mt.code = '40YTime' THEN 'forty_time'
		END AS measurable_type
		,re.code AS workout_code
		,re.[priority]
		,wt.[type]
		,CASE WHEN mt.code IN ('Hgt','Wgt') THEN ROW_NUMBER() OVER (PARTITION BY wo.player_id, me.measurable_type_id ORDER BY re.[priority], me.value DESC, wt.[type], workout_id, me.order_by, me.import_key, me.created_at, me.updated_at)
			WHEN mt.code IN ('40YTime') THEN ROW_NUMBER() OVER (PARTITION BY wo.player_id, me.measurable_type_id ORDER BY re.[priority], me.value, wt.[type], workout_id, me.order_by, me.import_key, me.created_at, me.updated_at)
			ELSE NULL
		END AS measurable_order_overall
		,CASE WHEN mt.code IN ('Hgt','Wgt') THEN ROW_NUMBER() OVER (PARTITION BY wo.player_id, workout_id, me.measurable_type_id ORDER BY re.[priority], me.value DESC, wt.[type], me.order_by, me.import_key, me.created_at, me.updated_at)
			WHEN mt.code IN ('40YTime') THEN ROW_NUMBER() OVER (PARTITION BY wo.player_id, workout_id, me.measurable_type_id ORDER BY re.[priority], me.value, wt.[type], me.order_by, me.import_key, me.created_at, me.updated_at)
			ELSE NULL
		END AS measurable_order_by_workout
		,ROW_NUMBER() OVER (PARTITION BY wo.player_id, me.measurable_type_id ORDER BY re.[priority]) AS measurable_order_by_priority
		,CASE WHEN mt.code IN ('Hgt') THEN CAST(LEFT(me.value,1) AS NUMERIC(1,0)) * 12 + CAST(RIGHT(LEFT(me.value,3),2) AS NUMERIC(2,0)) + CAST(RIGHT(LEFT(me.value,4),1) AS NUMERIC(1,0)) * 0.125
			ELSE me.value 
		END AS value
		,wo.[date] AS workout_date
	INTO #temp_measurables
	FROM [BaneProductionAnalytics].[dbo].[workouts] wo
	LEFT JOIN [BaneProductionAnalytics].[dbo].[measurables] me
		ON wo.id = me.workout_id
	LEFT JOIN [BaneProductionAnalytics].[dbo].[measurable_types] mt
		ON me.measurable_type_id = mt.id
	LEFT JOIN [BaneProductionAnalytics].[dbo].[player_workout_types] wt
		ON wo.player_workout_type_id = wt.id
	LEFT JOIN [BaneProductionAnalytics].[dbo].[reliabilities] re
		ON me.reliability_id = re.id
	LEFT JOIN [BaneProductionAnalytics].[dbo].[players] pl
		ON wo.player_id = pl.id
		AND pl.is_deleted = 0
	WHERE wo.[description] NOT LIKE 'PRO Scouting%'
		AND wo.[description] NOT LIKE '%(VET)%'
		AND (wo.is_deleted = 0 OR (wo.is_deleted = 1 AND wo.[description] LIKE 'NCAA Scouting%'))
		AND re.code IN ('V','W','X','B','P','E')
		AND (MONTH(wo.[date]) IN (6,7,8,9,10,11,12,1) OR (MONTH(wo.[date]) = 2 AND DAY(wo.[date]) < 16) OR (MONTH(wo.[date]) = 5 AND DAY(wo.[date]) > 16))
		AND (pl.nfl_id IS NOT NULL OR draft_year >= @iSeason)
		AND draft_year >= 2005
		AND draft_year <= @iSeason + 2
		AND ((mt.code = 'Hgt' AND value BETWEEN 5000 AND 7060)
		OR (mt.code = 'Wgt' AND value BETWEEN 100 AND 450)
		OR (mt.code = '40YTime' AND value BETWEEN 4.19 AND 7.00))

--Miles Boykin didn't have any measurables rows with both weight and 40, so manually create one
INSERT INTO #temp_measurables VALUES(742039,'NCAA Scouting Report - Joe Hortiz',232459,2019,'weight','P',11,'RPT',1,1,1,227.000000,'2018-08-14')

--Devin Bush didn't have any measurables rows with both weight and 40, so manually create one
INSERT INTO #temp_measurables VALUES(695733,'NCAA Scouting Report - Dwaune Jones',230826,2019,'weight','P',11,'RPT',1,1,1,240.000000,'2018-05-20')

--Rashan Gary didn't have any measurables rows with both weight and 40, so manually create one
INSERT INTO #temp_measurables VALUES(695734,'NCAA Scouting Report - Dwaune Jones',230831,2019,'weight','P',11,'RPT',1,1,1,281.000000,'2018-05-20')


/*
SELECT *
FROM #temp_measurables
WHERE bane_player_id = 44254
ORDER BY measurable_type, priority
*/

/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Create a table that joins weights and 40 times so you always get the ones that are matched up.

OUTPUT TABLES:
#temp_40_joined_to_weights

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_40_joined_to_weights exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_40_joined_to_weights') IS NOT NULL
	DROP TABLE #temp_40_joined_to_weights

    SELECT m1.workout_id
		,m1.workout_description
		,m1.bane_player_id
		,m1.draft_year
		,m1.workout_code
		,m1.[priority]
		,m1.[type]
		,m1.measurable_order_overall
		,m1.measurable_order_by_priority
		,m1.measurable_order_by_workout
		,ROW_NUMBER() OVER (PARTITION BY m1.bane_player_id ORDER BY m1.measurable_order_overall) AS new_forty_order
		,m1.[value] AS forty_time
		,m2.[value] AS [weight]
	INTO #temp_40_joined_to_weights
	FROM #temp_measurables m1
	INNER JOIN #temp_measurables m2
		ON m1.workout_id = m2.workout_id
		AND m2.measurable_type = 'weight'
		AND m2.measurable_order_by_workout = 1
	WHERE m1.measurable_type = 'forty_time'
	   
/*
SELECT *
FROM #temp_40_joined_to_weights
WHERE bane_player_id = 76347
*/


/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Join the heights to the weights and 40 times.

OUTPUT TABLES:
#temp_measurables_to_model

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_measurables_to_model exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_measurables_to_model') IS NOT NULL
	DROP TABLE #temp_measurables_to_model

	SELECT fo.*
		,me.[value] AS height
	INTO #temp_measurables_to_model
	FROM #temp_40_joined_to_weights fo
	INNER JOIN #temp_measurables me
		ON fo.bane_player_id = me.bane_player_id
		AND me.measurable_type = 'height'
		AND me.measurable_order_overall = 1
	WHERE fo.new_forty_order = 1

/*
SELECT *
FROM #temp_measurables_to_model
WHERE draft_year = 2015
*/

/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Find the average age by eligibility to fill in missing ages for the current draft year.

OUTPUT TABLES:
#temp_average_ages

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_average_ages exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_average_ages') IS NOT NULL
	DROP TABLE #temp_average_ages

	SELECT draft_year
		,eligibility
		,AVG(DATEDIFF(DD,(birth_date),CONCAT('04/01/',@iSeason + 1)) / 365.2425 ) AS average_age
	INTO #temp_average_ages
	FROM BaneProductionAnalytics.dbo.players
	WHERE draft_year = @iSeason + 1
	GROUP BY draft_year
		,eligibility


/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Find the salary value for injured players

OUTPUT TABLES:
#temp_average_ages
#temp_injured_salaries_one_row

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_injured_salaries exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_injured_salaries') IS NOT NULL
	DROP TABLE #temp_injured_salaries

	SELECT PlayerID AS nfl_player_id
		,MAX([SalaryFit]) AS salaries
	INTO #temp_injured_salaries
	FROM [AnalyticsWork].[dbo].[rd1_players_defense_3] r1
	WHERE report_week = 6
		AND report_season = @iSeason
		AND Season = (SELECT MAX(season) FROM [AnalyticsWork].[dbo].[rd1_players_defense_3] r2 WHERE r2.PlayerID = r1.PlayerID AND r2.report_week = 6 AND r2.report_season = @iSeason)
	GROUP BY PlayerID


	INSERT INTO #temp_injured_salaries
	SELECT PlayerID AS nfl_player_id
		,MAX([SalaryFit]) AS salaries
	FROM [AnalyticsWork].[dbo].[rd1_players_offense_3] r1
	WHERE report_week = 6
		AND report_season = @iSeason
		AND Season = (SELECT MAX(season) FROM [AnalyticsWork].[dbo].[rd1_players_offense_3] r2 WHERE r2.PlayerID = r1.PlayerID AND r2.report_week = 6 AND r2.report_season = @iSeason)
	GROUP BY PlayerID


-- Check if #temp_injured_salaries_one_row exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_injured_salaries_one_row') IS NOT NULL
	DROP TABLE #temp_injured_salaries_one_row

	SELECT nfl_player_id
		,MAX(salaries) AS salaries
	INTO #temp_injured_salaries_one_row
	FROM #temp_injured_salaries
	GROUP BY nfl_player_id


/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Add bane_player_id to the season position tables

OUTPUT TABLES:
#temp_season_position_offense
#temp_season_position_defense

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_season_position_offense exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_season_position_offense') IS NOT NULL
	DROP TABLE #temp_season_position_offense

	SELECT nfl_player_id
		,pl.id AS bane_player_id
		,season
		,receiver_type
	INTO #temp_season_position_offense
	FROM Analytics.dbo.analysis_players_season_position_offense po
	INNER JOIN BaneProductionAnalytics.dbo.players pl
		ON po.nfl_player_id = pl.nfl_id
		AND pl.is_deleted = 0
	WHERE season_type_adjusted = 'REGPOST'

-- Check if #temp_season_position_defense exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_season_position_defense') IS NOT NULL
	DROP TABLE #temp_season_position_defense

	SELECT nfl_player_id
		,pl.id AS bane_player_id
		,season
		,position_blt AS position_defense
	INTO #temp_season_position_defense
	FROM Analytics.dbo.analysis_players_season_position_defense pd
	INNER JOIN BaneProductionAnalytics.dbo.players pl
		ON pd.nfl_player_id = pl.nfl_id
		AND pl.is_deleted = 0
	WHERE season_type_adjusted = 'REGPOST'
		AND defense_type = 'ALL'


/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Remove players who haven't yet been drafted from the pro grades table.

OUTPUT TABLES:
#temp_pro_grades

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_pro_grades exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_pro_grades') IS NOT NULL
	DROP TABLE #temp_pro_grades

	SELECT pg.*
	INTO #temp_pro_grades
	FROM Analytics.dbo.analysis_players_pro_grades_first_4_seasons pg
	INNER JOIN BaneProductionAnalytics.dbo.players pl
		ON pg.bane_player_id = pl.id
		AND pl.is_deleted = 0
	WHERE draft_year <= @iSeason


/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Join his measurable summary 40 time and position graded as to the pivoted measurables table.

OUTPUT TABLES:
Analytics.dbo.work_r_input_pre_combine_measurables

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

--INSERT INTO Analytics.dbo.r_input_draft_model_pre_combine_measurables
	SELECT mp.bane_player_id
		,CONCAT(pl.last_name,', ',pl.goes_by) AS player
		,CASE WHEN pl.draft_year <= @iSeason THEN pl.draft_year
			WHEN pl.draft_year IN (@iSeason + 1,@iSeason + 2) THEN @iSeason + 1
			ELSE NULL
		END AS draft_year
		,CASE WHEN pl.draft_year <= @iSeason THEN DATEDIFF(DD,(birth_date),CONCAT('04/01/',pl.draft_year)) / 365.2425 
			WHEN pl.draft_year IN (@iSeason + 1,@iSeason + 2) THEN ISNULL(DATEDIFF(DD,(birth_date),CONCAT('04/01/',@iSeason + 1)) / 365.2425,average_age) 
			ELSE NULL
		END AS age_at_draft
		,CASE WHEN COALESCE(pg.position,pn.translation) = 'OH' THEN 'RB'
			WHEN pg.position = 'DE' AND (pn.abbreviation = 'DE43' OR position_defense = 'DE43') THEN 'OB'
			WHEN COALESCE(pg.position,pn.translation) = 'DC' AND position_defense = 'NB' THEN 'DC_SLOT'
			WHEN COALESCE(pg.position,pn.translation) = 'WR' AND receiver_type = 'SLOT' THEN 'WR_SLOT'
			ELSE COALESCE(pg.position,pn.translation)
		END AS position
		,mp.[weight]
		,mp.height
		,mp.forty_time
		,speed AS actual_forty_time
		,CASE WHEN pl.draft_year > @iSeason OR sal.salaries IN ('Pre-2011') OR (pl.draft_year <= 2007 AND sal.salaries IS NULL) THEN NULL 
			ELSE CASE WHEN sal.salaries IN ('Injured') THEN ins.salaries
					ELSE COALESCE(CAST(sal.salaries AS FLOAT),0) 
				END 
		END AS pct_of_cap
		,pg.season
		,CASE WHEN pl.draft_year > @iSeason THEN 1 ELSE season_in_league END AS season_in_league
		,CASE WHEN pl.draft_year > @iSeason THEN NULL ELSE COALESCE(grade_value,50) END AS pro_grade
		,@iSeason + 1 AS draft_model_year
		,GETDATE() AS created_date
	FROM #temp_measurables_to_model mp
	INNER JOIN BaneProductionAnalytics.dbo.players pl
		ON mp.bane_player_id = pl.id
		AND pl.is_deleted = 0
	LEFT JOIN BaneProductionAnalytics.dbo.positions pn
		ON pl.position_id = pn.id  
	LEFT JOIN BaneProductionAnalytics.dbo.measurable_summaries ms
		ON mp.bane_player_id = ms.player_id
	LEFT JOIN AnalyticsWork.dbo.salaries_for_modeling sal
		ON mp.bane_player_id = sal.id
		--AND sal.salaries NOT IN ('Injured','Pre-2011')
	LEFT JOIN #temp_injured_salaries_one_row ins
		ON pl.nfl_id = ins.nfl_player_id
	LEFT JOIN #temp_pro_grades pg
		ON mp.bane_player_id = pg.bane_player_id
		AND pg.created_date = (SELECT MAX(created_date) FROM #temp_pro_grades)
	LEFT JOIN #temp_average_ages aa
		ON pl.draft_year = aa.draft_year
		AND pl.eligibility = aa.eligibility
	LEFT JOIN #temp_season_position_offense poff
		ON pg.bane_player_id = poff.bane_player_id
		AND pg.season = poff.season
	LEFT JOIN #temp_season_position_defense pdef
		ON pg.bane_player_id = pdef.bane_player_id
		AND pg.season = pdef.season
	WHERE pl.draft_year <= @iSeason
		OR (pl.draft_year IN (@iSeason + 1,@iSeason + 2) AND pg.season IS NULL)
