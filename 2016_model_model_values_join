

/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

This is the code joining the combined draft model outputs to player information.

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Get down to the player's Average pro grade in his first 4 seasons.

OUTPUT TABLES:
##temp_average_pro_grades

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if ##temp_pro_grade_with_entry exists, if it does drop it
IF OBJECT_ID('tempdb..##temp_pro_grade_with_entry') IS NOT NULL
	DROP TABLE ##temp_pro_grade_with_entry

SELECT g1.*
      ,nfl_entry_year
INTO ##temp_pro_grade_with_entry
FROM [AnalyticsWork].[dbo].[draft2016_pro_grades_by_season] g1
INNER JOIN bane_production_analytics.dbo.players p
ON g1.player_id=p.id
WHERE player_season_in_league >= 0
  AND player_season_in_league <= 4

--select * from ##temp_pro_grade_with_entry

-- Check if ##temp_seasons, if it does drop it
IF OBJECT_ID('tempdb..##temp_seasons') IS NOT NULL
	DROP TABLE ##temp_seasons

select distinct m.player_id
      ,m.nfl_entry_year
      ,CASE WHEN p1.nfl_entry_year>=2009 THEN p1.nfl_entry_year ELSE NULL END as first_season
	  ,CASE WHEN p2.nfl_entry_year>=2008 THEN p2.nfl_entry_year+1 ELSE NULL END as second_season
	  ,CASE WHEN p3.nfl_entry_year>=2007 THEN p3.nfl_entry_year+2 ELSE NULL END as third_season
	  ,CASE WHEN p4.nfl_entry_year>=2006 THEN p4.nfl_entry_year+3 ELSE NULL END as fourth_season
into ##temp_seasons
from ##temp_pro_grade_with_entry m
inner join ##temp_pro_grade_with_entry p1
on m.player_id=p1.player_id
inner join ##temp_pro_grade_with_entry p2
on p1.player_id=p2.player_id
inner join ##temp_pro_grade_with_entry p3
on p1.player_id=p3.player_id
inner join ##temp_pro_grade_with_entry p4
on p1.player_id=p4.player_id
order by m.player_id

--select * from ##temp_seasons where player_id=61774

-- Check if ##temp_seasons_unpivot, if it does drop it
IF OBJECT_ID('tempdb..##temp_seasons_unpivot') IS NOT NULL
	DROP TABLE ##temp_seasons_unpivot


	SELECT player_id
		  ,me.season
	  into ##temp_seasons_unpivot
      FROM ##temp_seasons
   UNPIVOT (season FOR code IN (first_season, second_season, third_season, fourth_season
							   )) AS me

--select * from ##temp_seasons_unpivot WHERE PLAYER_ID=5992

-- Check if ##temp_pro_grades_extra_seasons exists, if it does drop it
IF OBJECT_ID('tempdb..##temp_pro_grades_extra_seasons') IS NOT NULL
	DROP TABLE ##temp_pro_grades_extra_seasons

    SELECT coalesce(mo.player_id,se.player_id) as player_id
		  ,se.season
		  ,CASE WHEN grade_scaled_mean <=43.5 THEN 43.5 ELSE COALESCE(grade_scaled_mean,43.5) END as grade_scaled_mean
	  INTO ##temp_pro_grades_extra_seasons
      FROM ##temp_seasons_unpivot se
 LEFT JOIN ##temp_pro_grade_with_entry mo
        ON mo.player_id = se.player_id
	   AND mo.report_season = se.season
    WHERE season<=2016

--select * from ##temp_pro_grades_extra_seasons WHERE PLAYER_ID=8187


-- Check if ##temp_average_pro_grades exists, if it does drop it
IF OBJECT_ID('tempdb..##temp_average_pro_grades') IS NOT NULL
	DROP TABLE ##temp_average_pro_grades

SELECT player_id
      ,AVG(grade_scaled_mean) AS grade_scaled_mean
INTO ##temp_average_pro_grades
FROM ##temp_pro_grades_extra_seasons g1
GROUP BY player_id




SELECT DISTINCT goes_by
	  ,last_name
	  ,[code] AS college
	  ,grade_draft_board AS grade_draft_board_bin
	  ,CASE WHEN grade_draft_board = '8.0' THEN 100
	        WHEN grade_draft_board = '7.0' THEN 92
			WHEN grade_draft_board = '6.9' THEN 82 
			WHEN grade_draft_board IN ('6.7','6.5') THEN 71
			WHEN grade_draft_board ='6.3' THEN 64 
			WHEN grade_draft_board IN ('6.1','6.0') THEN 58
			WHEN grade_draft_board = '5.9' THEN 53.5
			WHEN grade_draft_board = '5.8' THEN 50
			WHEN grade_draft_board = '5.6' THEN 47
			WHEN grade_draft_board = '5.4' THEN 45
			ELSE NULL	
	   END AS grade_draft_board
	  ,[grade_scaled] AS grade_college_model_raw
	  ,([grade_scaled] - intercept) / coefficient AS grade_college_model_adjusted
	  ,(([grade_scaled] - intercept) / coefficient)*1.05 AS grade_college_model_5pct
	  ,CASE WHEN value_grades=0 OR value_measurables=0 THEN 2.0
			WHEN (([grade_scaled] - intercept) / coefficient)*1.05 >= 96 THEN 8.0
	        WHEN (([grade_scaled] - intercept) / coefficient)*1.05 >= 90 THEN 7.0
			WHEN (([grade_scaled] - intercept) / coefficient)*1.05 >= 78.5 THEN 6.9
			WHEN (([grade_scaled] - intercept) / coefficient)*1.05 >= 67 THEN 6.7
			WHEN (([grade_scaled] - intercept) / coefficient)*1.05 >= 62 THEN 6.3
			WHEN (([grade_scaled] - intercept) / coefficient)*1.05 >= 55.5 THEN 6.1
			WHEN (([grade_scaled] - intercept) / coefficient)*1.05 >= 52 THEN 5.9
			WHEN (([grade_scaled] - intercept) / coefficient)*1.05 >= 48 THEN 5.8
			WHEN (([grade_scaled] - intercept) / coefficient)*1.05 >= 46 THEN 5.7
			WHEN (([grade_scaled] - intercept) / coefficient)*1.05 IS NOT NULL THEN 5.7
			ELSE 2.0
	   END AS grade_college_model_bin
	   ,grade_scaled_mean AS grade_pro
	  ,CASE WHEN [grade_scaled_mean] >= 93.5 THEN 8.0
	        WHEN [grade_scaled_mean] >= 78.5 THEN 7.0
			WHEN [grade_scaled_mean] >= 69 THEN 6.9 
			WHEN [grade_scaled_mean] >= 62 THEN 6.3
			WHEN [grade_scaled_mean] >= 55 THEN 6.0 
			WHEN [grade_scaled_mean] >= 51.5 THEN 5.9
			WHEN [grade_scaled_mean] >= 48.5 THEN 5.8
			WHEN [grade_scaled_mean] >= 46.5 THEN 5.7
			WHEN [grade_scaled_mean] >= 45.5 THEN 5.6
			WHEN [grade_scaled_mean] >= 44.5 THEN 5.4
			WHEN [grade_scaled_mean] >= 43.5 THEN 5.2
			WHEN [grade_scaled_mean] IS NOT NULL THEN 5.0
			ELSE 2.0
	   END AS grade_pro_bin      
	  ,COALESCE(dbg.draft_year,nfl_entry_year,pl.draft_year) as nfl_entry_year	  
      ,me.position
	  ,value_grades
	  ,value_production
	  ,value_measurables
	  ,me.[player_id]
	  /*,CASE WHEN [grade_scaled] >= 96 THEN 8.0
	        WHEN [grade_scaled] >= 90 THEN 7.0
			WHEN [grade_scaled] >= 78.5 THEN 6.9
			WHEN [grade_scaled] >= 67 THEN 6.7
			WHEN [grade_scaled] >= 62 THEN 6.3
			WHEN [grade_scaled] >= 55.5 THEN 6.1
			WHEN [grade_scaled] >= 52 THEN 5.9
			WHEN [grade_scaled] >= 48 THEN 5.8
			WHEN [grade_scaled] >= 46 THEN 5.7
			WHEN [grade_scaled] >= 43 THEN 5.6
			WHEN [grade_scaled] >= 42 THEN 5.4
			WHEN [grade_scaled] >= 40.5 THEN 5.2
			WHEN [grade_scaled] IS NOT NULL THEN 5.0
			ELSE 2.0
	   END AS grade_college_model*/
  FROM [AnalyticsWork].[dbo].[draft2016__combined_model_output] me
INNER JOIN [bane_production_analytics].[dbo].[players] pl
        ON me.player_id = pl.id
 LEFT JOIN [bane_production_analytics].[dbo].[positions] pos
        ON pl.position_id = pos.id
 LEFT JOIN [AnalyticsWork].[dbo].[draft2016_draft_board_grades] dbg
        ON me.player_id = dbg.player_id
		AND dbg.draft_board_position_order = 1
 LEFT JOIN ##temp_average_pro_grades pg
        ON me.player_id = pg.player_id
 LEFT JOIN [bane_production_analytics].[dbo].[schools] sc
        ON pl.ncaa_club_id = sc.id
 LEFT JOIN [AnalyticsWork].[dbo].[draft2016__model_grade_adjustment_factors] af
        ON LTRIM(RTRIM(me.position)) = LTRIM(RTRIM(af.position_draft_board))
	 WHERE grade_scaled = (SELECT MAX(grade_scaled) FROM [AnalyticsWork].[dbo].[draft2016__combined_model_output] me2 WHERE me2.player_id=me.player_id)
