--select * from bane_production_analytics.dbo.players where last_name='Spence' and first_name='Noah'

/*
UPDATE [AnalyticsWork].[dbo].[draft2016__measurable_model_output]
SET grade_scaled = NULL
WHERE grade_scaled = 0

INSERT INTO [AnalyticsWork].[dbo].[draft2016__production_model_output] (player_id, position_draft_board, grade_scaled, model_type)
VALUES (205416, 'OB', 42.49319412, 'production');

--select * from bane_production_analytics.dbo.players where last_name='Kaufusi'
--killebrew 52224
--cravens 66611
--floyd 205416
--ogbah 211809
--davis 40853
--kaufusi 45891

DELETE FROM AnalyticsWork.dbo.draft2016__combined_to_model_prev
WHERE position_draft_board in ('OT','OG','OC');

*/

--need to come up with a way to create up to 4 rows (based on entry year) for OL since then don't have production
--model values, and right now you use production model values for creating the multiple rows


/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

This is the code for combining all the different draft model outputs into one.

Then create a row for every year for the player's first 4 seasons with his three model values.

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Combine the outputs of the three models. Measurables, Grades, Production.

In the second step, add the updated draft year so fix the players whose entry year 
is off by a year (i.e. Bosa in 2016 showing up as 2017).

OUTPUT TABLES:
##temp_model_values

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if ##temp_model_values_no_season exists, if it does drop it
IF OBJECT_ID('tempdb..##temp_model_values_no_season') IS NOT NULL
	DROP TABLE ##temp_model_values_no_season

    SELECT DISTINCT
	       COALESCE(me.player_id,gr.player_id,pr.player_id) AS player_id
	      ,COALESCE(me.position_draft_board,gr.position_draft_board,pr.position_draft_board) AS position_draft_board
		  ,pr.player_season
		  ,me.grade_scaled AS value_measurables
		  ,gr.grade_scaled AS value_grades
		  ,pr.grade_scaled AS value_production
	  INTO ##temp_model_values_no_season
      FROM [AnalyticsWork].[dbo].[draft2016__measurable_model_output] me
 FULL JOIN [AnalyticsWork].[dbo].[draft2016__grades_model_output] gr
        ON me.player_id = gr.player_id
 FULL JOIN [AnalyticsWork].[dbo].[draft2016__production_model_output] pr
        ON me.player_id = pr.player_id

--SELECT * FROM ##temp_model_values_no_season where player_id=62907

-- Check if ##temp_model_values exists, if it does drop it
IF OBJECT_ID('tempdb..##temp_model_values') IS NOT NULL
	DROP TABLE ##temp_model_values

    SELECT ns.player_id
	      ,position_draft_board
		  ,CASE WHEN COALESCE(player_season,dbg.draft_year,nfl_entry_year,pl.draft_year) > 2016 THEN 2016 ELSE COALESCE(player_season,dbg.draft_year,nfl_entry_year,pl.draft_year) END AS player_season
		  ,value_measurables
		  ,value_grades
		  ,value_production
          ,CASE WHEN COALESCE(dbg.draft_year,nfl_entry_year,pl.draft_year) > 2016 THEN 2016 ELSE COALESCE(dbg.draft_year,nfl_entry_year,pl.draft_year) END AS nfl_entry_year
	  INTO ##temp_model_values
      FROM ##temp_model_values_no_season ns
INNER JOIN [bane_production_analytics].[dbo].[players] pl
        ON ns.player_id = pl.id
 LEFT JOIN [AnalyticsWork].[dbo].[draft2016_draft_board_grades] dbg
        ON ns.player_id = dbg.player_id
		AND dbg.draft_board_position_order = 1

--SELECT * FROM ##temp_model_values where player_id=61774

/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Create a row for every first 4 seasons in a player's career (even if he didn't play 4).

Then unpivot the table so you one row for each season for each player.

OUTPUT TABLES:
##temp_seasons_unpivot

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if ##temp_seasons, if it does drop it
IF OBJECT_ID('tempdb..##temp_seasons') IS NOT NULL
	DROP TABLE ##temp_seasons

select distinct m.player_id
      ,m.nfl_entry_year
      ,CASE WHEN p1.nfl_entry_year>=2009 THEN p1.nfl_entry_year ELSE NULL END as first_season
	  ,CASE WHEN p2.nfl_entry_year>=2008 THEN p2.nfl_entry_year+1 ELSE NULL END as second_season
	  ,CASE WHEN p3.nfl_entry_year>=2007 THEN p3.nfl_entry_year+2 ELSE NULL END as third_season
	  ,CASE WHEN p4.nfl_entry_year>=2006 THEN p4.nfl_entry_year+3 ELSE NULL END as fourth_season
into ##temp_seasons
from ##temp_model_values m
inner join ##temp_model_values p1
on m.player_id=p1.player_id
inner join ##temp_model_values p2
on p1.player_id=p2.player_id
inner join ##temp_model_values p3
on p1.player_id=p3.player_id
inner join ##temp_model_values p4
on p1.player_id=p4.player_id
order by m.player_id

--select * from ##temp_seasons where player_id=61774

-- Check if ##temp_seasons_unpivot, if it does drop it
IF OBJECT_ID('tempdb..##temp_seasons_unpivot') IS NOT NULL
	DROP TABLE ##temp_seasons_unpivot


	SELECT player_id
		  ,me.season
	  into ##temp_seasons_unpivot
      FROM ##temp_seasons
   UNPIVOT (season FOR code IN (first_season, second_season, third_season, fourth_season
							   )) AS me

--select * from ##temp_seasons_unpivot 



/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Join the season table to the model values table. This will give you one row for every player
season for his first 4 seasons. Because the production grade has a season on it already,
left join on player_id and season.

LEFT JOIN for before current draft, FULL JOIN for current draft

OUTPUT TABLES:
##temp_model_values_seasons

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if ##temp_model_values_seasons, if it does drop it
IF OBJECT_ID('tempdb..##temp_model_values_seasons') IS NOT NULL
	DROP TABLE ##temp_model_values_seasons

    SELECT mo.player_id
	      ,position_draft_board
		  ,nfl_entry_year
		  ,se.season
		  ,value_measurables
		  ,value_grades
		  ,value_production
	  INTO ##temp_model_values_seasons
      FROM ##temp_seasons_unpivot se
 LEFT JOIN ##temp_model_values mo
        ON mo.player_id = se.player_id
	   AND mo.player_season = se.season
	 WHERE value_measurables IS NOT NULL
	    OR value_grades IS NOT NULL
		OR value_production IS NOT NULL

--select * from ##temp_model_values_seasons where player_id=61386



/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Join the model values table to the first 4 seasons pro grades table.  
If a player doesn't have a grade for that season, give him a 50.
Also join in his overall college grade (the one that is adjusted for
scout and then averaged).

OUTPUT TABLES:
##temp_model_values_with_pro_grades

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if ##temp_model_values_with_pro_grades, if it does drop it
IF OBJECT_ID('tempdb..##temp_model_values_with_pro_grades') IS NOT NULL
	DROP TABLE ##temp_model_values_with_pro_grades

    SELECT mo.*
		  ,player_season_in_league
		  ,CASE WHEN player_season_in_league = 2 THEN 1 ELSE 0 END AS player_season_second
		  ,CASE WHEN player_season_in_league = 3 THEN 1 ELSE 0 END AS player_season_third
		  ,CASE WHEN player_season_in_league = 4 THEN 1 ELSE 0 END AS player_season_fourth
		  ,grade_tier
		  ,CASE WHEN COALESCE(grade_scaled_mean,50) < 50 THEN 50
		        ELSE COALESCE(grade_scaled_mean,50)
		   END AS grade_scaled
		  ,grade_overall_adjusted_mean AS grade_overall_college
		  ,value_adjusted_max AS grade_max_college
	  INTO ##temp_model_values_with_pro_grades
	  FROM ##temp_model_values_seasons mo
 LEFT JOIN [AnalyticsWork].[dbo].[draft2016_pro_grades_by_season] pg
        ON pg.player_id = mo.player_id
	   AND pg.report_season = mo.season
 LEFT JOIN [AnalyticsWork].[dbo].[draft2016_college_grades_overall_mean] cg
        ON mo.player_id = cg.player_id	
 LEFT JOIN [AnalyticsWork].[dbo].[draft2016_college_grades_max] ma
        ON mo.player_id = ma.player_id	
	 WHERE nfl_entry_year >= 2006 AND nfl_entry_year <=2016
	   AND ((player_season_in_league <=4
	   AND player_season_in_league !=0)
	    OR player_season_in_league IS NULL)

--SELECT * INTO AnalyticsWork.dbo.draft2016__combined_to_model FROM ##temp_model_values_with_pro_grades

   



