


/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Create the master dash table for finding outliers.

**Keep an eye on workouts where some times are 4 priority, some are 5. Example workout ids: 638693,638694,638696,638697,638698,638699,638700,638806,638808,638809,638810,638811

OUTPUT TABLES:
#temp_outlier_dash_master

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_outlier_dash_master exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_outlier_dash_master') IS NOT NULL
	DROP TABLE #temp_outlier_dash_master

	SELECT wo.id AS workout_id
		,wo.[description] AS workout_description
		,wo.player_id AS bane_player_id
		,pl.draft_year
		,re.code AS workout_code
		,wt.[type]
		,wo.[date] AS workout_date
		,me.measurable_type_id
		,mt.code
		,me.order_by AS attempt
		,me.value AS value
	INTO #temp_outlier_dash_master
	FROM [BaneProductionAnalytics].[dbo].[workouts] wo
	LEFT JOIN [BaneProductionAnalytics].[dbo].[measurables] me
		ON wo.id = me.workout_id
	LEFT JOIN [BaneProductionAnalytics].[dbo].[measurable_types] mt
		ON me.measurable_type_id = mt.id
	LEFT JOIN [BaneProductionAnalytics].[dbo].[player_workout_types] wt
		ON wo.player_workout_type_id = wt.id
	LEFT JOIN [BaneProductionAnalytics].[dbo].[reliabilities] re
		ON me.reliability_id = re.id
	LEFT JOIN [BaneProductionAnalytics].[dbo].[players] pl
		ON wo.player_id = pl.id
	WHERE re.translation IN ('I') --Only Indy, Pro Day, Combine, or Workout numbers
		AND NOT (wt.[type] = 'RPT' AND re.translation = 'I')  --Not from a scout entering the Combine numbers
		AND (wo.is_deleted = 0 OR (wo.is_deleted = 1 AND wo.[description] LIKE 'NCAA Scouting%')) --Not a deleted record
		AND NOT YEAR(wo.[date]) > pl.draft_year --Not from a workout that occured after his draft
		AND pl.draft_year >= 2005
		AND pl.draft_year <=  2018
		AND mt.code = '40YTime'
		AND value BETWEEN 4.00 AND 7.00


/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Self join the master table so you can put the electronic time alongside the two hand times.

OUTPUT TABLES:
#temp_timing_differences

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_timing_differences exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_timing_differences') IS NOT NULL
	DROP TABLE #temp_timing_differences

	SELECT m1.workout_id
		,m1.workout_description
		,m1.bane_player_id
		,m1.draft_year
		,m1.workout_code
		,m1.[type]
		,m1.workout_date
		,m1.measurable_type_id
		,m1.code
		,m1.attempt
		,m1.value AS hand_time
		,m2.value AS electronic_time
		,m1.value - m2.value AS time_difference
	INTO #temp_timing_differences
	FROM #temp_outlier_dash_master m1
	INNER JOIN #temp_outlier_dash_master m2
		ON m1.workout_id = m2.workout_id
		AND m2.attempt = 3
	WHERE m1.attempt IN (1,2)

	INSERT INTO #temp_timing_differences
	SELECT m1.workout_id
		,m1.workout_description
		,m1.bane_player_id
		,m1.draft_year
		,m1.workout_code
		,m1.[type]
		,m1.workout_date
		,m1.measurable_type_id
		,m1.code
		,m1.attempt
		,m1.value AS hand_time
		,m2.value AS electronic_time
		,m1.value - m2.value AS time_difference
	FROM #temp_outlier_dash_master m1
	INNER JOIN #temp_outlier_dash_master m2
		ON m1.workout_id = m2.workout_id
		AND m2.attempt = 6
	WHERE m1.attempt IN (4,5)


/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Find the average differences

OUTPUT TABLES:
#temp_difference_avg

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_difference_avg exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_difference_avg') IS NOT NULL
	DROP TABLE #temp_difference_avg

	SELECT workout_description 
		,AVG(time_difference) AS time_difference_avg
		,STDEV(time_difference) AS time_difference_std
	INTO #temp_difference_avg
	FROM #temp_timing_differences td
	GROUP BY workout_description 


/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Join the avg and stdev to the difference table so you can find the z scores.

OUTPUT TABLES:
#temp_difference_z_scores

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_difference_z_scores exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_difference_z_scores') IS NOT NULL
	DROP TABLE #temp_difference_z_scores

	SELECT td.*
		,time_difference_avg
		,time_difference_std
		,(time_difference - time_difference_avg) / time_difference_std AS time_difference_z
		,CASE WHEN (time_difference - time_difference_avg) / time_difference_std >= 2 OR (time_difference - time_difference_avg) / time_difference_std  <= -2 THEN 1 ELSE 0 END AS outlier_time
		,CONCAT(last_name,', ',goes_by) AS player
		,combine_jersey
		,sc.code AS school
	INTO #temp_difference_z_scores
	FROM #temp_timing_differences td
	INNER JOIN #temp_difference_avg av
		ON td.workout_description = av.workout_description
	INNER JOIN BaneProductionAnalytics.dbo.players pl
		ON td.bane_player_id = pl.id
		AND pl.is_deleted = 0
	INNER JOIN BaneProductionAnalytics.dbo.schools sc
		ON pl.ncaa_club_id = sc.id


/*---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Note which players have a double outlier (both hand times in the same run off by more than 2 std devs).

OUTPUT TABLES:
#temp_outlier_list

----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

-- Check if #temp_outlier_list exists, if it does drop it
IF OBJECT_ID('tempdb..#temp_outlier_list') IS NOT NULL
	DROP TABLE #temp_outlier_list

	SELECT workout_id
		,workout_description
		,bane_player_id
		,player
		,combine_jersey
		,school
		,SUM(CASE WHEN attempt IN (1,2) THEN outlier_time ELSE 0 END) AS outlier_first_run
		,SUM(CASE WHEN attempt IN (4,5) THEN outlier_time ELSE 0 END) AS outlier_second_run
	INTO #temp_outlier_list
	FROM #temp_difference_z_scores
	GROUP BY workout_id
		,workout_description
		,bane_player_id
		,player
		,combine_jersey
		,school


